# Container holding a reproman development environment.
#
# To build:
#	docker build -t reproman:debian \
#       -f Dockerfile-debian \
#		--build-arg IMAGE=debian:jessie \
#		--build-arg UNAME=$USER \
#		--build-arg UID=$(id -u) \
#		--build-arg GID=$(id -g) \
#		.
#
#	or docker-compose build debian(be sure to update IMAGE, UID, and GID in docker-compose.yml)
#
# To run:
#	docker run -it --name reproman-debian \
#		-v $PWD:/home/$USER/reproman \
#		-v /var/run/docker.sock:/var/run/docker.sock \
#		reproman:debian
#
#	or docker-compose run debian

ARG IMAGE=ubuntu:18.04
FROM $IMAGE

RUN apt-get update
RUN apt-get install -y software-properties-common

RUN add-apt-repository ppa:git-core/ppa
RUN apt-get install -y build-essential libssl-dev libffi-dev vim wget

RUN apt-get install -y python3.7-dev

RUN apt-get install -y python3-pyparsing python3-crypto python3-pip
RUN apt-get update
RUN python3.7 -m pip install --upgrade pip

# Create a container user account that matches a system user account.
ARG UNAME=austin
ARG UID=1000
ARG GID=1000
# RUN groupadd -g $GID $UNAME \
# 	&& useradd -m -u $UID -g $GID -s /bin/bash $UNAME

# RUN chown -R $UID.$GID /home/$UNAME \
#     && find '/home/'$UNAME'/reproman' -name "*.pyc" -delete



# Docker prereqs
RUN apt-get install -y \
    ca-certificates \
    curl \
    gnupg \
    lsb-release

RUN python3.7 -m pip install ipdb

RUN mkdir /etc/apt/keyrings
RUN curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg \
    && echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null

RUN apt-get update
RUN apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin
#
# USER $UID:$GID
#
# WORKDIR /home/$UNAME
#
ENTRYPOINT ["/bin/bash"]
